{"version":3,"sources":["route.js"],"names":["_app","require","defaultLocation","currentLocation","window","navigator","geolocation","getCurrentPosition","res","_res$coords","coords","latitude","longitude","updateWeather","concat","err","location","hash","query","split","checkHash","slice","_ref2","_slicedToArray","requestURL","includes","route","routes","get","error404","addEventListener","searchedLocation"],"mappings":"AAOA,aACA,IAAAA,KAAAC,QAAA,mkCACA,IAAMC,gBAAkB,0CAElBC,gBAAkB,WACtBC,OAAOC,UAAUC,YAAYC,mBAC3B,SAACC,GAAQ,IAAAC,EACyBD,EAAIE,OAA5BC,EADDF,EACCE,SAAUC,EADXH,EACWG,WAClB,EAAAZ,KAAAa,eAAA,OAAAC,OAAqBH,GAArB,OAAAG,OAAwCF,KAE1C,SAACG,GACCX,OAAOY,SAASC,KAAOf,mBATvBA,iBAAkB,SAAAgB,GAAA,OAAAL,KAAAA,cAAAA,WAAAA,EAAAA,mBAAAK,EAAAC,MAA2C,QAGjEf,OAAOC,IAAUC,IAAAA,CACN,CAAA,oBACyBE,iBADzB,CAAA,WACCG,oBAGVS,UAAA,WACEhB,IAAAA,EAAgBa,OAAOf,SAAAA,KAAvBmB,MAAA,GADOC,EAAAC,eALXC,EAAAC,SADFD,EAAAL,MAAA,KAYA,CAAAK,GANa,GALXE,EAKWJ,EAAA,GALXJ,EAKWI,EAAA,GAsBXK,OAAOC,IAAIF,GAASC,OAAOC,IAAIF,EAAXC,CAAkBT,IAAS,EAAAlB,KAAA6B,aAGjDzB,OAAO0B,iBAAiB,aAAcV,WAhBtChB,OAAM2B,iBAAmB,OAAnBA,WAAmB3B,OAAWS,SAAAA,KAqBhCO,YApBJhB,OAAAY,SAAAC,KAAA","file":"route.min.js","sourcesContent":["/**\n * @license MIT\n * @fileoverview Menage all routes\n * @copyright codewithsadee 2023 All rights reserved\n * @author codewithsadee <mohammadsadee24@gmail.com>\n */\n\n\"use strict\";\nimport { updateWeather, error404 } from \"./app.js\";\nconst defaultLocation = \"#/weather?lat=51.5073219&lon=-0.1276474\"; // London\n\nconst currentLocation = function () {\n  window.navigator.geolocation.getCurrentPosition(\n    (res) => {\n      const { latitude, longitude } = res.coords;\n      updateWeather(`lat=${latitude}`, `lon=${longitude}`);\n    },\n    (err) => {\n      window.location.hash = defaultLocation;\n    }\n  );\n};\n\n/**\n * @param {string} query Searched query\n */\nconst searchedLocation = (query) => updateWeather(...query.split(\"&\"));\n// updateWeather(\"lat=51.5073219\", \"lon=-0.1276474\")\n\nconst routes = new Map([\n  [\"/current-location\", currentLocation],\n  [\"/weather\", searchedLocation],\n]);\n\nconst checkHash = function () {\n  const requestURL = window.location.hash.slice(1);\n  const [route, query] = requestURL.includes\n    ? requestURL.split(\"?\")\n    : [requestURL];\n  routes.get(route) ? routes.get(route)(query) : error404();\n};\n\nwindow.addEventListener(\"hashchange\", checkHash);\nwindow.addEventListener(\"load\", function () {\n  if (!window.location.hash) {\n    window.location.hash = \"#/current-location\";\n  } else {\n    checkHash();\n  }\n});\n"]}