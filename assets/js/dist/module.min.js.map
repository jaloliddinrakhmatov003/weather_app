{"version":3,"sources":["module.js"],"names":["weekDayNames","monthNames","getTime","getDate","timeUnix","timezone","date","Date","hours","getUTCHours","getUTCDay","minutes","getUTCMonth","concat","weekDayName","getUTCDate","getHours","getMinutes","period","mps_to_km","mps","message","level","aqiText","2","3","4","5"],"mappings":"AAOA,sMAEO,IAAMA,aAAe,CAC1B,SACA,SAFK,UAIL,YAMK,WAeP,SAlBE,8CAGK,IAAMC,WAAa,CACxB,MACA,MACA,MACA,MAiBK,MACL,MACA,MACA,MAEA,MALK,MAQP,MAjBE,qCAuBWC,IAAOC,QAAPD,SAAoBE,EAAUC,GACzC,IAAMC,EAAO,IAAIC,KAA6B,KAAvBH,EAAWC,IAC5BG,EAAaC,aAAnBH,EAAAI,aACMC,EAAcV,WAAJK,EAAhBM,eAGA,MAAA,GAAAC,OAAAC,EAAA,KAAAD,OAAkBP,EAARS,aAAV,MAAAF,OAA8BF,4BANzB,IAAMT,QAAU,SAAUE,EAAUC,GACzC,IAAMC,EAAO,IAAIC,KAA6B,KAAvBH,EAAWC,IAC5BG,EAAQF,EAAKG,cAaRO,EAAWV,EAAAW,aAChBX,EAAiBF,IAANG,EAAc,KAAGF,KAElC,MAAA,GAAAQ,OAAYL,EAAQ,IAAL,GAAf,KAAAK,OAA6BF,EAA7B,KAAAE,OAAAK,4BAHK,IAAMF,SAAW,SAAUZ,EAAUC,GAC1C,IACMG,EADO,IAAID,KAA6B,KAAvBH,EAAWC,IACfI,cAWRU,EAAAA,IAAYX,EAAZW,KAAY,KAGvB,MAAA,GAAAN,OAAUL,EAAV,IAAA,GAAA,KAAAK,OAAAK,8BAGqB,IAAAC,UAAA,SAAAC,GAQnBC,OAFC,KAAAD,EAGC,iCAGFE,IAAOC,QADN,CAEDF,EAAAA,CAbmBC,MAAA,OAgBrBD,QACEC,qFADCE,EAhBkB,CAsBrBF,MAAG,OACDA,QACAD,iLAxBGI,EAAA,CAYHH,MAAO,WACPD,QACE,gHAEJK,EAAG,CACDJ,MAAO,OACPD,QACE,2HAGJM,EAAG,CACDL,MAAO,YACPD,QACE","file":"module.min.js","sourcesContent":["/**\n * @license MIT\n * @fileoverview All module functions\n * @copyright codewithsadee 2023 All rights reserved\n * @author codewithsadee <mohammadsadee24@gmail.com>\n */\n\n\"use strict\";\n\nexport const weekDayNames = [\n  \"Sunday\",\n  \"Monday\",\n  \"Tuesday\",\n  \"Wednesday\",\n  \"Thursday\",\n  \"Friday\",\n  \"Saturday\",\n];\n\nexport const monthNames = [\n  \"Jan\",\n  \"Feb\",\n  \"Mar\",\n  \"Apr\",\n  \"May\",\n  \"Jun\",\n  \"Jul\",\n  \"Aug\",\n  \"Sep\",\n  \"Oct\",\n  \"Nov\",\n  \"Dec\",\n];\n\n/**\n *\n * @param {number} dateUnix Unix date in seconds\n * @param {number} timezone Timezone shift from UTC in seconds\n * @returns {string} Date string. formate: \"Sunday 10, Jan\"\n */\nexport const getDate = function (dateUnix, timezone) {\n  const date = new Date((dateUnix + timezone) * 1000);\n  const weekDayName = weekDayNames[date.getUTCDay()];\n  const monthName = monthNames[date.getUTCMonth()];\n\n  return `${weekDayName} ${date.getUTCDate()}, ${monthName}`;\n};\n\n/**\n *\n * @param {number} timeUnix Unix date in seconds\n * @param {number} timezone Timezone shift from UTC in seconds\n * @returns {string} Time string. formate: \"HH:MM AM/PM\"\n */\nexport const getTime = function (timeUnix, timezone) {\n  const date = new Date((timeUnix + timezone) * 1000);\n  const hours = date.getUTCHours();\n  const minutes = date.getMinutes();\n  const period = hours >= 12 ? \"PM\" : \"AM\";\n\n  return `${hours % 12 || 12}:${minutes} ${period}`;\n};\n\n/**\n *\n * @param {number} timeUnix Unix date in seconds\n * @param {number} timezone Timezone shift from UTC in seconds\n * @returns {string} Time string. formate: \"HH AM/PM\"\n */\nexport const getHours = function (timeUnix, timezone) {\n  const date = new Date((timeUnix + timezone) * 1000);\n  const hours = date.getUTCHours();\n  const period = hours >= 12 ? \"PM\" : \"AM\";\n\n  return `${hours % 12 || 12} ${period}`;\n};\n\n/**\n *\n * @param {number} mps Meter per seconds\n * @returns {number} Kilometer per hours\n */\nexport const mps_to_km = (mps) => {\n  const mph = mps * 3600;\n\n  return mph / 1000;\n};\n\nexport const aqiText = {\n  1: {\n    level: \"Good\",\n    message:\n      \"Air quality is considered satisfactory, and air pollution poses little or no risk\",\n  },\n  2: {\n    level: \"Fair\",\n    message:\n      \"Air quality is acceptable; however, for some pollutants there may be a moderate health concern for a very small number of people who are unusually sensitive to air pollution\",\n  },\n  3: {\n    level: \"Moderate\",\n    message:\n      \"AMembers of sensitive  groups may experience health effects. The general public is not likely to be affected\",\n  },\n  4: {\n    level: \"Poor\",\n    message:\n      \"Everyone may begin to experience health effects; members of sensitive groups may experience more serious health effects\",\n  },\n\n  5: {\n    level: \"Very poor\",\n    message:\n      \"Health warnings of emergency conditions. The entire population is more likely to be affected.\",\n  },\n};\n"]}