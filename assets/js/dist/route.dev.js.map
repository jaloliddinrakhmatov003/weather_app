{"version":3,"sources":["route.js"],"names":["defaultLocation","currentLocation","window","navigator","geolocation","getCurrentPosition","res","coords","latitude","longitude","err","location","hash","searchedLocation","query","updateWeather","split","routes","Map","checkHash","requestURL","slice","includes","route","get","addEventListener"],"mappings":"AAAA;;;;;;AAOA;;AACA;;;;;;;;;;;;;;;;;;AACA,IAAMA,eAAe,GAAG,yCAAxB,C,CAAmE;;AAEnE,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAY;AAClCC,EAAAA,MAAM,CAACC,SAAP,CAAiBC,WAAjB,CAA6BC,kBAA7B,CACE,UAACC,GAAD,EAAS;AAAA,sBACyBA,GAAG,CAACC,MAD7B;AAAA,QACCC,QADD,eACCA,QADD;AAAA,QACWC,SADX,eACWA,SADX;AAEP,0CAAqBD,QAArB,iBAAwCC,SAAxC;AACD,GAJH,EAKE,UAACC,GAAD,EAAS;AACPR,IAAAA,MAAM,CAACS,QAAP,CAAgBC,IAAhB,GAAuBZ,eAAvB;AACD,GAPH;AASD,CAVD;AAYA;;;;;AAGA,IAAMa,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,KAAD;AAAA,SAAWC,oDAAiBD,KAAK,CAACE,KAAN,CAAY,GAAZ,CAAjB,EAAX;AAAA,CAAzB,C,CACA;;;AAEA,IAAMC,MAAM,GAAG,IAAIC,GAAJ,CAAQ,CACrB,CAAC,mBAAD,EAAsBjB,eAAtB,CADqB,EAErB,CAAC,UAAD,EAAaY,gBAAb,CAFqB,CAAR,CAAf;;AAKA,IAAMM,SAAS,GAAG,SAAZA,SAAY,GAAY;AAC5B,MAAMC,UAAU,GAAGlB,MAAM,CAACS,QAAP,CAAgBC,IAAhB,CAAqBS,KAArB,CAA2B,CAA3B,CAAnB;;AAD4B,aAELD,UAAU,CAACE,QAAX,GACnBF,UAAU,CAACJ,KAAX,CAAiB,GAAjB,CADmB,GAEnB,CAACI,UAAD,CAJwB;AAAA;AAAA,MAErBG,KAFqB;AAAA,MAEdT,KAFc;;AAK5BG,EAAAA,MAAM,CAACO,GAAP,CAAWD,KAAX,IAAoBN,MAAM,CAACO,GAAP,CAAWD,KAAX,EAAkBT,KAAlB,CAApB,GAA+C,oBAA/C;AACD,CAND;;AAQAZ,MAAM,CAACuB,gBAAP,CAAwB,YAAxB,EAAsCN,SAAtC;AACAjB,MAAM,CAACuB,gBAAP,CAAwB,MAAxB,EAAgC,YAAY;AAC1C,MAAI,CAACvB,MAAM,CAACS,QAAP,CAAgBC,IAArB,EAA2B;AACzBV,IAAAA,MAAM,CAACS,QAAP,CAAgBC,IAAhB,GAAuB,oBAAvB;AACD,GAFD,MAEO;AACLO,IAAAA,SAAS;AACV;AACF,CAND","sourcesContent":["/**\n * @license MIT\n * @fileoverview Menage all routes\n * @copyright codewithsadee 2023 All rights reserved\n * @author codewithsadee <mohammadsadee24@gmail.com>\n */\n\n\"use strict\";\nimport { updateWeather, error404 } from \"./app.js\";\nconst defaultLocation = \"#/weather?lat=51.5073219&lon=-0.1276474\"; // London\n\nconst currentLocation = function () {\n  window.navigator.geolocation.getCurrentPosition(\n    (res) => {\n      const { latitude, longitude } = res.coords;\n      updateWeather(`lat=${latitude}`, `lon=${longitude}`);\n    },\n    (err) => {\n      window.location.hash = defaultLocation;\n    }\n  );\n};\n\n/**\n * @param {string} query Searched query\n */\nconst searchedLocation = (query) => updateWeather(...query.split(\"&\"));\n// updateWeather(\"lat=51.5073219\", \"lon=-0.1276474\")\n\nconst routes = new Map([\n  [\"/current-location\", currentLocation],\n  [\"/weather\", searchedLocation],\n]);\n\nconst checkHash = function () {\n  const requestURL = window.location.hash.slice(1);\n  const [route, query] = requestURL.includes\n    ? requestURL.split(\"?\")\n    : [requestURL];\n  routes.get(route) ? routes.get(route)(query) : error404();\n};\n\nwindow.addEventListener(\"hashchange\", checkHash);\nwindow.addEventListener(\"load\", function () {\n  if (!window.location.hash) {\n    window.location.hash = \"#/current-location\";\n  } else {\n    checkHash();\n  }\n});\n"],"file":"route.dev.js"}